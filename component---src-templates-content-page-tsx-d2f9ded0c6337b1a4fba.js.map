{"version":3,"file":"component---src-templates-content-page-tsx-d2f9ded0c6337b1a4fba.js","mappings":"iLACW,EAAS,qCACTA,EAAc,2CACd,EAAQ,oCACR,EAAO,mCC6ClB,MArCA,SAAqB,GAAW,IAAX,KAAEC,GAAM,EAC3B,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,eAiBtB,OAAEC,GAAWF,EAAKG,KAAKC,aAC7B,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAWC,GACdF,EAAAA,cAACG,EAAAA,EAAW,CACVC,MAAOT,EAAKU,OAAOC,gBAAgBC,gBACnCC,IAAKX,EAAOY,KACZR,UAAWC,EACXQ,SAAU,CACRC,aAAc,SAGlBX,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UAAWC,GAAgBL,EAAOY,MACtCT,EAAAA,cAAAA,KAAAA,CAAIC,UAAWC,GAAcR,IAIrC,C,gHC9CWkB,EAAc,2C,UC0CzB,MAjCA,SAA6B,GAAoB,IAApB,KAAEjB,EAAI,SAAEkB,GAAU,EAC7C,MAAMC,EAAOnB,EAAKoB,gBACZ,QACJC,EAAO,UAAEC,EAAS,SAAEC,EAAQ,OAAErB,GAC5BF,EAAKG,KAAKC,aAEd,OACEC,EAAAA,cAACmB,EAAAA,EAAM,CAACN,SAAUA,EAAUO,MAAOH,GACjCjB,EAAAA,cAACqB,EAAAA,EAAG,CACFD,MAAON,EAAKQ,YAAYF,MACxBG,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,QAClDN,SAAUA,EACVd,MAAOY,GAAUS,EAAAA,EAAAA,GAAOX,EAAKQ,YAAYI,WACzCC,IAAKX,EAAUF,EAAKc,OAAOC,OAE7B7B,EAAAA,cAAAA,UAAAA,CACEC,UAAWC,EACX4B,WAAS,EACTC,SAAS,6BAET/B,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIgC,SAAS,YAAYlB,EAAKQ,YAAYF,QAE5CpB,EAAAA,cAACiC,EAAAA,EAAW,CAACvC,KAAMG,EAAOqC,UAC1BlC,EAAAA,cAAAA,UAAAA,CACEmC,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCL,SAAS,iBAKnB,C","sources":["webpack://testingboss/./src/components/avatar-block.module.css","webpack://testingboss/./src/components/avatar-block.tsx","webpack://testingboss/./src/templates/content-page.module.css","webpack://testingboss/./src/templates/content-page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var author = \"avatar-block-module--author--df6f4\";\nexport var avatarBlock = \"avatar-block-module--avatar-block--32708\";\nexport var image = \"avatar-block-module--image--7564f\";\nexport var text = \"avatar-block-module--text--2a5a5\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport * as styles from './avatar-block.module.css';\n\nfunction AvatarBlock({ text }) {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 45, height: 45)\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n        }\n      }\n    }\n  `);\n\n  const { author } = data.site.siteMetadata;\n  return (\n    <div className={styles.avatarBlock}>\n      <GatsbyImage\n        image={data.avatar.childImageSharp.gatsbyImageData}\n        alt={author.name}\n        className={styles.image}\n        imgStyle={{\n          borderRadius: '50%',\n        }}\n      />\n      <ul>\n        <li className={styles.author}>{author.name}</li>\n        <li className={styles.text}>{text}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default AvatarBlock;\n","// extracted by mini-css-extract-plugin\nexport var contentPage = \"content-page-module--content-page--bbab4\";","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport { getSrc } from 'gatsby-plugin-image';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nimport * as styles from './content-page.module.css';\nimport AvatarBlock from '../components/avatar-block';\n\nfunction ContentPageTemplate({ data, location }) {\n  const page = data.markdownRemark;\n  const {\n    siteUrl, siteTitle, keywords, author,\n  } = data.site.siteMetadata;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={page.frontmatter.title}\n        description={page.frontmatter.description || page.excerpt}\n        keywords={keywords}\n        image={siteUrl + getSrc(page.frontmatter.thumbnail)}\n        url={siteUrl + page.fields.slug}\n      />\n      <article\n        className={styles.contentPage}\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{page.frontmatter.title}</h1>\n        </header>\n        <AvatarBlock text={author.summary} />\n        <section\n          dangerouslySetInnerHTML={{ __html: page.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n    </Layout>\n  );\n}\n\nexport default ContentPageTemplate;\n\nexport const pageQuery = graphql`\n  query pageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        keywords\n        author {\n          summary\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      fields {\n        slug\n      }\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"D MMMM YYYY\")\n        description\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FIXED, width: 500)\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["avatarBlock","text","data","useStaticQuery","author","site","siteMetadata","React","className","styles","GatsbyImage","image","avatar","childImageSharp","gatsbyImageData","alt","name","imgStyle","borderRadius","contentPage","location","page","markdownRemark","siteUrl","siteTitle","keywords","Layout","title","Seo","frontmatter","description","excerpt","getSrc","thumbnail","url","fields","slug","itemScope","itemType","itemProp","AvatarBlock","summary","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}